### Variables
@host = localhost
@port8090 = 8090
@port8080 = 8080
@baseUrl8090 = http://{{host}}:{{port8090}}
@baseUrl8080 = http://{{host}}:{{port8080}}

### ============================================
### Basic GET Tests - Server 1 (Port 8090)
### ============================================

### Test 1: Basic GET request - Should return 200 OK
GET {{baseUrl8090}}/
Host: example.com

### Test 2: GET with www subdomain - Should return 200 OK  
GET {{baseUrl8090}}/
Host: www.example.com

### Test 3: GET index.html - Should return 200 OK
GET {{baseUrl8090}}/index.html
Host: example.com

### Test 4: GET CSS file - Should return 200 OK with correct Content-Type
GET {{baseUrl8090}}/cat-css/style.css
Host: example.com

### Test 5: GET PNG image - Should return 200 OK with correct Content-Type
GET {{baseUrl8090}}/cutecat.png
Host: example.com

### ============================================
### Method Testing
### ============================================

### Test 6: DELETE method (allowed) - Should return 200 OK or appropriate response
DELETE {{baseUrl8090}}/
Host: example.com

### Test 7: POST method (not allowed for /) - Should return 405 Method Not Allowed
POST {{baseUrl8090}}/
Host: example.com
Content-Type: application/json

{}

### Test 8: PUT method (not allowed) - Should return 405 Method Not Allowed
PUT {{baseUrl8090}}/
Host: example.com
Content-Type: application/json

{}

### ============================================
### Upload Location Tests (/upload)
### ============================================

### Test 9: POST to upload location - Should return 201 Created
POST {{baseUrl8090}}/upload
Host: example.com
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test.txt"
Content-Type: text/plain

This is a test file content.
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Test 10: GET to upload location (not allowed) - Should return 405 Method Not Allowed
GET {{baseUrl8090}}/upload
Host: example.com

### ============================================
### Blogs Location Tests (/blogs)
### ============================================

### Test 11: GET to blogs location - Should return 200 OK
GET {{baseUrl8090}}/blogs
Host: example.com

### Test 12: POST to blogs location (not allowed) - Should return 405 Method Not Allowed
POST {{baseUrl8090}}/blogs
Host: example.com
Content-Type: application/json

{"title": "Test Blog"}

### ============================================
### Error Testing
### ============================================

### Test 13: 404 Not Found - Non-existent path
GET {{baseUrl8090}}/nonexistent/path
Host: example.com

### Test 14: 404 Not Found - Non-existent file
GET {{baseUrl8090}}/doesnotexist.html
Host: example.com

### Test 15: Custom 404 error page test
GET {{baseUrl8090}}/trigger404
Host: example.com

### Test 16: Large request body (should trigger 413 if over limit)
POST {{baseUrl8090}}/upload
Host: example.com
Content-Type: text/plain
Content-Length: 1000

@import "large-data.txt"

### ============================================
### Server 2 Tests (Port 8080) - CGI Server
### ============================================

### Test 17: GET to CGI server - Should return 200 OK with CGI processing
GET {{baseUrl8080}}/
Host: api.example.com

### Test 18: POST to CGI server - Should return 200 OK with CGI processing
POST {{baseUrl8080}}/
Host: api.example.com
Content-Type: application/json

{"data": "test", "timestamp": "2024-01-01T00:00:00Z"}

### Test 19: CGI with query parameters
GET {{baseUrl8080}}/?param1=value1&param2=value2
Host: api.example.com

### ============================================
### Host Header Testing
### ============================================

### Test 20: Unknown host (should use default server)
GET {{baseUrl8090}}/
Host: unknown.example.com

### Test 21: Missing Host header (HTTP/1.1 should return 400)
GET {{baseUrl8090}}/ HTTP/1.1

### Test 22: Invalid Host header format
GET {{baseUrl8090}}/
Host: invalid..host

### ============================================
### HTTP Version Testing
### ============================================

### Test 23: HTTP/1.0 request
GET {{baseUrl8090}}/ HTTP/1.0
Host: example.com

### Test 24: HTTP/1.1 request (default)
GET {{baseUrl8090}}/ HTTP/1.1
Host: example.com

### ============================================
### Content-Type Testing
### ============================================

### Test 25: HTML file Content-Type
GET {{baseUrl8090}}/index.html
Host: example.com

### Test 26: CSS file Content-Type
GET {{baseUrl8090}}/cat-css/style.css
Host: example.com

### Test 27: PNG image Content-Type
GET {{baseUrl8090}}/cutecat.png
Host: example.com

### ============================================
### Edge Cases and Stress Tests
### ============================================

### Test 28: Very long URI (should trigger 414 if over limit)
GET {{baseUrl8090}}/very/long/path/that/goes/on/and/on/and/should/eventually/trigger/an/error/if/the/path/is/too/long/for/the/server/to/handle/properly/testing/limits
Host: example.com

### Test 29: Request with many headers
GET {{baseUrl8090}}/
Host: example.com
Custom-Header-1: value1
Custom-Header-2: value2
Custom-Header-3: value3
Custom-Header-4: value4
Custom-Header-5: value5
X-Test-Header: testing
User-Agent: httpYac-Test-Client
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate

### Test 30: Empty request body POST
POST {{baseUrl8090}}/upload
Host: example.com
Content-Type: multipart/form-data; boundary=test
Content-Length: 0

### Test 31: Chunked transfer encoding (if supported)
POST {{baseUrl8090}}/upload
Host: example.com
Transfer-Encoding: chunked
Content-Type: text/plain

5
Hello
5
World
0

### ============================================
### Connection Testing
### ============================================

### Test 32: Connection close
GET {{baseUrl8090}}/
Host: example.com
Connection: close

### Test 33: Connection keep-alive
GET {{baseUrl8090}}/
Host: example.com
Connection: keep-alive

### ============================================
### Directory and Path Testing
### ============================================

### Test 34: Directory without trailing slash (might trigger 301 redirect)
GET {{baseUrl8090}}/cat-css
Host: example.com

### Test 35: Directory with trailing slash
GET {{baseUrl8090}}/cat-css/
Host: example.com

### Test 36: Root path variations
GET {{baseUrl8090}}
Host: example.com

### Test 37: Path with encoded characters
GET {{baseUrl8090}}/index%2Ehtml
Host: example.com

### ============================================
### Performance and Load Testing
### ============================================

### Test 38: Rapid sequential requests
GET {{baseUrl8090}}/
Host: example.com

###
GET {{baseUrl8090}}/cutecat.png
Host: example.com

###
GET {{baseUrl8090}}/index.html
Host: example.com

### ============================================
### Custom Error Pages Testing
### ============================================

### Test 39: Trigger custom 404 error page
GET {{baseUrl8090}}/this/path/does/not/exist
Host: example.com

### Test 40: Trigger potential 500 error
POST {{baseUrl8090}}/
Host: example.com
Content-Type: application/malformed
Content-Length: -1